-- This schema provides a robust foundation for both the fulfillment and customer service modules.

-- Turn on foreign key support in SQLite for testing if needed
PRAGMA foreign_keys = ON;

-- Product and Inventory Management Tables
-- These tables will store the information about base products, components, and how they relate.

CREATE TABLE IF NOT EXISTS inventory_items (
    sku VARCHAR(255) PRIMARY KEY,
    item_name VARCHAR(255) NOT NULL,
    item_description TEXT,
    stock_quantity INTEGER NOT NULL DEFAULT 0,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS products (
    product_sku VARCHAR(255) PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    -- e.g., 'Laptop', 'Accessory'
    product_type VARCHAR(50),
    created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS product_bom (
    bom_id SERIAL PRIMARY KEY,
    product_sku VARCHAR(255) REFERENCES products(product_sku),
    component_sku VARCHAR(255) REFERENCES inventory_items(sku),
    quantity INTEGER NOT NULL,
    UNIQUE(product_sku, component_sku)
);


-- Fulfillment / Work Order Tables
-- These tables manage the state of each order as it moves through the fulfillment process.

CREATE TABLE IF NOT EXISTS work_orders (
    work_order_id VARCHAR(255) PRIMARY KEY, -- Corresponds to the marketplace order_id
    customer_name VARCHAR(255),
    -- e.g., 'pending_preparation', 'awaiting_scan', 'ready_for_shipping', 'shipped', 'cancelled', 'dismissed'
    status VARCHAR(50) NOT NULL DEFAULT 'pending_preparation',
    shipping_label_url TEXT,
    verified_shipping_label_url TEXT, -- The URL for the label with the SKU barcode stamped on it
    shipping_label_refund_url TEXT, -- The URL to call to void/refund the shipment
    shipping_label_voided BOOLEAN NOT NULL DEFAULT FALSE,
    cancellation_reason TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS work_order_items (
    item_id SERIAL PRIMARY KEY,
    work_order_id VARCHAR(255) NOT NULL REFERENCES work_orders(work_order_id),
    -- This could be a base SKU for a laptop or an accessory SKU
    item_sku VARCHAR(255) NOT NULL,
    -- The unique barcode generated by the PowerShell script for this specific item instance
    instance_barcode VARCHAR(255) UNIQUE,
    -- e.g., 'pending', 'prepared', 'scanned_correctly'
    status VARCHAR(50) NOT NULL DEFAULT 'pending',
    quantity INTEGER NOT NULL DEFAULT 1
);


-- Logging Table for Label Printing
-- This helps prevent accidental duplicate printing of shipping labels.

CREATE TABLE IF NOT EXISTS print_logs (
    log_id SERIAL PRIMARY KEY,
    work_order_id VARCHAR(255) NOT NULL REFERENCES work_orders(work_order_id),
    printed_by_user_id VARCHAR(255), -- To track who printed it
    printed_at TIMESTAMPTZ DEFAULT NOW(),
    reason VARCHAR(255) DEFAULT 'Initial Print' -- Could be 'Reprint - Damaged' etc.
);


-- Customer Service Message Tables
-- These tables store the conversation history.

CREATE TABLE IF NOT EXISTS threads (
    thread_id VARCHAR(255) PRIMARY KEY,
    -- This links a conversation directly to a work order
    work_order_id VARCHAR(255) REFERENCES work_orders(work_order_id),
    topic VARCHAR(255),
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS messages (
    message_id VARCHAR(255) PRIMARY KEY,
    thread_id VARCHAR(255) NOT NULL REFERENCES threads(thread_id),
    -- 'customer', 'operator'
    author_type VARCHAR(50),
    author_id VARCHAR(255),
    author_name VARCHAR(255),
    body TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW()
);
